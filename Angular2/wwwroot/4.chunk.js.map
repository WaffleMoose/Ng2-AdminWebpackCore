{"version":3,"file":"4.chunk.js","sources":["webpack:///./src/app/pages/components/components.module.ts","webpack:///delegated ./node_modules/rxjs/Rx.js from dll-reference vendor_lib?0db5","webpack:///./~/ng2-tree/src/draggable/node-draggable.service.js","webpack:///./~/ng2-tree/src/menu/menu.events.js","webpack:///./~/ng2-tree/src/menu/node-menu.service.js","webpack:///./~/ng2-tree/src/tree.js","webpack:///./~/ng2-tree/src/tree.service.js","webpack:///./src/app/pages/components/components.component.ts","webpack:///./src/app/pages/components/components/treeView/treeView.component.ts","webpack:///./~/ng2-tree/src/editable/editable.events.js","webpack:///./~/ng2-tree/src/tree.component.js","webpack:///./~/ng2-tree/src/tree.events.js","webpack:///./~/ng2-tree/src/tree.types.js","webpack:///./~/ng2-tree/src/utils/event.utils.js","webpack:///./src/app/pages/components/components.routing.ts","webpack:///./~/ng2-tree/index.js","webpack:///./~/ng2-tree/src/draggable/captured-node.js","webpack:///./~/ng2-tree/src/draggable/draggable.events.js","webpack:///./~/ng2-tree/src/draggable/node-draggable.directive.js","webpack:///./~/ng2-tree/src/editable/node-editable.directive.js","webpack:///./~/ng2-tree/src/menu/node-menu.component.js","webpack:///./~/ng2-tree/src/tree-internal.component.js","webpack:///./~/ng2-tree/src/tree.module.js","webpack:///./src/app/pages/components/components/treeView/treeView.html"],"sourcesContent":["import { NgModule }      from '@angular/core';\r\nimport { CommonModule }  from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { NgaModule } from '../../theme/nga.module';\r\nimport { TreeModule } from 'ng2-tree';\r\n\r\nimport { routing }       from './components.routing';\r\nimport { Components } from './components.component';\r\nimport { TreeView } from './components/treeView/treeView.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    NgaModule,\r\n    TreeModule,\r\n    routing\r\n  ],\r\n  declarations: [\r\n    Components,\r\n    TreeView,\r\n  ]\r\n})\r\nexport class ComponentsModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/components/components.module.ts","module.exports = (__webpack_require__(5))(446);\n\n\n//////////////////\n// WEBPACK FOOTER\n// delegated ./node_modules/rxjs/Rx.js from dll-reference vendor_lib\n// module id = 523\n// module chunks = 2 4","\"use strict\";\nvar core_1 = require('@angular/core');\nvar Rx_1 = require('rxjs/Rx');\nvar draggable_events_1 = require('./draggable.events');\nvar NodeDraggableService = (function () {\n    function NodeDraggableService() {\n        this.draggableNodeEvents$ = new Rx_1.Subject();\n    }\n    NodeDraggableService.prototype.fireNodeDragged = function (captured, target) {\n        if (!captured.tree || captured.tree.isStatic()) {\n            return;\n        }\n        this.draggableNodeEvents$.next(new draggable_events_1.NodeDraggableEvent(captured, target));\n    };\n    NodeDraggableService.prototype.captureNode = function (node) {\n        this.capturedNode = node;\n    };\n    NodeDraggableService.prototype.getCapturedNode = function () {\n        return this.capturedNode;\n    };\n    NodeDraggableService.prototype.releaseCapturedNode = function () {\n        this.capturedNode = null;\n    };\n    NodeDraggableService.decorators = [\n        { type: core_1.Injectable },\n    ];\n    NodeDraggableService.ctorParameters = function () { return []; };\n    return NodeDraggableService;\n}());\nexports.NodeDraggableService = NodeDraggableService;\n//# sourceMappingURL=node-draggable.service.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ng2-tree/src/draggable/node-draggable.service.js\n// module id = 614\n// module chunks = 4","\"use strict\";\n(function (NodeMenuItemAction) {\n    NodeMenuItemAction[NodeMenuItemAction[\"NewFolder\"] = 0] = \"NewFolder\";\n    NodeMenuItemAction[NodeMenuItemAction[\"NewTag\"] = 1] = \"NewTag\";\n    NodeMenuItemAction[NodeMenuItemAction[\"Rename\"] = 2] = \"Rename\";\n    NodeMenuItemAction[NodeMenuItemAction[\"Remove\"] = 3] = \"Remove\";\n})(exports.NodeMenuItemAction || (exports.NodeMenuItemAction = {}));\nvar NodeMenuItemAction = exports.NodeMenuItemAction;\n(function (NodeMenuAction) {\n    NodeMenuAction[NodeMenuAction[\"Close\"] = 0] = \"Close\";\n})(exports.NodeMenuAction || (exports.NodeMenuAction = {}));\nvar NodeMenuAction = exports.NodeMenuAction;\n//# sourceMappingURL=menu.events.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ng2-tree/src/menu/menu.events.js\n// module id = 615\n// module chunks = 4","\"use strict\";\nvar core_1 = require('@angular/core');\nvar Rx_1 = require('rxjs/Rx');\nvar menu_events_1 = require('./menu.events');\nvar NodeMenuService = (function () {\n    function NodeMenuService() {\n        this.nodeMenuEvents$ = new Rx_1.Subject();\n    }\n    NodeMenuService.prototype.fireMenuEvent = function (sender, action) {\n        var nodeMenuEvent = { sender: sender, action: action };\n        this.nodeMenuEvents$.next(nodeMenuEvent);\n    };\n    NodeMenuService.prototype.hideMenuStream = function (treeElementRef) {\n        return this.nodeMenuEvents$\n            .filter(function (e) { return treeElementRef.nativeElement !== e.sender; })\n            .filter(function (e) { return e.action === menu_events_1.NodeMenuAction.Close; });\n    };\n    NodeMenuService.prototype.hideMenuForAllNodesExcept = function (treeElementRef) {\n        this.nodeMenuEvents$.next({\n            sender: treeElementRef.nativeElement,\n            action: menu_events_1.NodeMenuAction.Close\n        });\n    };\n    NodeMenuService.decorators = [\n        { type: core_1.Injectable },\n    ];\n    NodeMenuService.ctorParameters = function () { return []; };\n    return NodeMenuService;\n}());\nexports.NodeMenuService = NodeMenuService;\n//# sourceMappingURL=node-menu.service.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ng2-tree/src/menu/node-menu.service.js\n// module id = 616\n// module chunks = 4","\"use strict\";\nvar _ = require('lodash');\nvar tree_types_1 = require('./tree.types');\nvar Tree = (function () {\n    function Tree(node, parent, isBranch) {\n        if (parent === void 0) { parent = null; }\n        if (isBranch === void 0) { isBranch = false; }\n        this.node = node;\n        this.parent = parent;\n        this._children = isBranch ? [] : null;\n    }\n    Object.defineProperty(Tree.prototype, \"children\", {\n        get: function () {\n            return this._children;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Tree.prototype.createNode = function (isBranch) {\n        var tree = new Tree({ value: '' }, null, isBranch);\n        tree.markAsNew();\n        if (this.isLeaf()) {\n            return this.addSibling(tree);\n        }\n        else {\n            return this.addChild(tree);\n        }\n    };\n    ;\n    Object.defineProperty(Tree.prototype, \"value\", {\n        get: function () {\n            return this.node.value;\n        },\n        set: function (value) {\n            if (typeof value !== 'string' && !Tree.isRenamable(value)) {\n                return;\n            }\n            if (Tree.isRenamable(this.value)) {\n                var newValue = typeof value === 'string' ? value : _.toString(value);\n                this.node.value = Tree.applyNewValueToRenamable(this.value, newValue);\n            }\n            else {\n                this.node.value = Tree.isValueEmpty(value) ? this.node.value : _.toString(value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Tree.prototype.addSibling = function (sibling, position) {\n        if (_.isArray(_.get(this.parent, 'children'))) {\n            return this.parent.addChild(sibling, position);\n        }\n        return null;\n    };\n    Tree.prototype.addChild = function (child, position) {\n        return this._addChild(Tree.cloneTreeShallow(child), position);\n    };\n    Tree.prototype._addChild = function (child, position) {\n        if (position === void 0) { position = _.size(this._children) || 0; }\n        child.parent = this;\n        if (Array.isArray(this._children)) {\n            this._children.splice(position, 0, child);\n        }\n        else {\n            this._children = [child];\n        }\n        return child;\n    };\n    Tree.prototype.swapWithSibling = function (sibling) {\n        if (!this.hasSibling(sibling)) {\n            return;\n        }\n        var siblingIndex = sibling.positionInParent;\n        var thisTreeIndex = this.positionInParent;\n        this.parent._children[siblingIndex] = this;\n        this.parent._children[thisTreeIndex] = sibling;\n    };\n    Object.defineProperty(Tree.prototype, \"positionInParent\", {\n        get: function () {\n            return _.indexOf(this.parent.children, this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Tree.prototype.isStatic = function () {\n        return _.get(this.node.settings, 'static', false);\n    };\n    Tree.prototype.isLeaf = function () {\n        return !this.isBranch();\n    };\n    Tree.prototype.isBranch = function () {\n        return Array.isArray(this._children);\n    };\n    Tree.prototype.isRoot = function () {\n        return this.parent === null;\n    };\n    Tree.prototype.hasSibling = function (tree) {\n        return !this.isRoot() && _.includes(this.parent.children, tree);\n    };\n    Tree.prototype.hasChild = function (tree) {\n        return _.includes(this._children, tree);\n    };\n    Tree.prototype.removeChild = function (tree) {\n        var childIndex = _.findIndex(this._children, function (child) { return child === tree; });\n        if (childIndex >= 0) {\n            this._children.splice(childIndex, 1);\n        }\n    };\n    Tree.prototype.removeItselfFromParent = function () {\n        if (!this.parent) {\n            return;\n        }\n        this.parent.removeChild(this);\n    };\n    Tree.prototype.switchFoldingType = function () {\n        if (this.isLeaf()) {\n            return;\n        }\n        this.node._foldingType = this.isNodeExpanded() ? tree_types_1.FoldingType.Collapsed : tree_types_1.FoldingType.Expanded;\n    };\n    Tree.prototype.isNodeExpanded = function () {\n        return this.foldingType === tree_types_1.FoldingType.Expanded;\n    };\n    Object.defineProperty(Tree.prototype, \"foldingType\", {\n        get: function () {\n            if (!this.node._foldingType) {\n                if (this._children) {\n                    this.node._foldingType = tree_types_1.FoldingType.Expanded;\n                }\n                else {\n                    this.node._foldingType = tree_types_1.FoldingType.Leaf;\n                }\n            }\n            return this.node._foldingType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Tree.prototype.isNew = function () {\n        return this.node._status === tree_types_1.TreeStatus.New;\n    };\n    Tree.prototype.markAsNew = function () {\n        this.node._status = tree_types_1.TreeStatus.New;\n    };\n    Tree.prototype.isBeingRenamed = function () {\n        return this.node._status === tree_types_1.TreeStatus.IsBeingRenamed;\n    };\n    Tree.prototype.markAsBeingRenamed = function () {\n        this.node._status = tree_types_1.TreeStatus.IsBeingRenamed;\n    };\n    Tree.prototype.isModified = function () {\n        return this.node._status === tree_types_1.TreeStatus.Modified;\n    };\n    Tree.prototype.markAsModified = function () {\n        this.node._status = tree_types_1.TreeStatus.Modified;\n    };\n    Tree.buildTreeFromModel = function (model, parent) {\n        if (parent === void 0) { parent = null; }\n        model.settings = tree_types_1.TreeModelSettings.merge(model, _.get(parent, 'node'));\n        var tree = new Tree(_.omit(model, 'children'), parent);\n        _.forEach(model.children, function (child, index) {\n            tree._addChild(Tree.buildTreeFromModel(child, tree), index);\n        });\n        return tree;\n    };\n    Tree.isValueEmpty = function (value) {\n        return _.isEmpty(_.trim(value));\n    };\n    Tree.isRenamable = function (value) {\n        return (_.has(value, 'setName') && _.isFunction(value.setName))\n            && (_.has(value, 'toString') && _.isFunction(value.toString) && value.toString !== Object.toString);\n    };\n    Tree.cloneTreeShallow = function (origin) {\n        var tree = new Tree(_.clone(origin.node));\n        tree._children = origin._children;\n        return tree;\n    };\n    ;\n    Tree.applyNewValueToRenamable = function (value, newValue) {\n        var renamableValue = _.merge({}, value);\n        renamableValue.setName(newValue);\n        return renamableValue;\n    };\n    return Tree;\n}());\nexports.Tree = Tree;\n//# sourceMappingURL=tree.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ng2-tree/src/tree.js\n// module id = 617\n// module chunks = 4","\"use strict\";\nvar tree_events_1 = require('./tree.events');\nvar Rx_1 = require('rxjs/Rx');\nvar core_1 = require('@angular/core');\nvar node_draggable_service_1 = require('./draggable/node-draggable.service');\nvar TreeService = (function () {\n    function TreeService(nodeDraggableService) {\n        this.nodeDraggableService = nodeDraggableService;\n        this.nodeMoved$ = new Rx_1.Subject();\n        this.nodeRemoved$ = new Rx_1.Subject();\n        this.nodeRenamed$ = new Rx_1.Subject();\n        this.nodeCreated$ = new Rx_1.Subject();\n        this.nodeSelected$ = new Rx_1.Subject();\n        this.nodeRemoved$.subscribe(function (e) { return e.node.removeItselfFromParent(); });\n    }\n    TreeService.prototype.unselectStream = function (tree) {\n        return this.nodeSelected$.filter(function (e) { return tree !== e.node; });\n    };\n    TreeService.prototype.fireNodeRemoved = function (tree) {\n        this.nodeRemoved$.next(new tree_events_1.NodeRemovedEvent(tree));\n    };\n    TreeService.prototype.fireNodeCreated = function (tree) {\n        this.nodeCreated$.next(new tree_events_1.NodeCreatedEvent(tree));\n    };\n    TreeService.prototype.fireNodeSelected = function (tree) {\n        this.nodeSelected$.next(new tree_events_1.NodeSelectedEvent(tree));\n    };\n    TreeService.prototype.fireNodeRenamed = function (oldValue, tree) {\n        this.nodeRenamed$.next(new tree_events_1.NodeRenamedEvent(tree, oldValue, tree.value));\n    };\n    TreeService.prototype.fireNodeMoved = function (tree, parent) {\n        this.nodeMoved$.next(new tree_events_1.NodeMovedEvent(tree, parent));\n    };\n    TreeService.prototype.draggedStream = function (tree, element) {\n        return this.nodeDraggableService.draggableNodeEvents$\n            .filter(function (e) { return e.target === element; })\n            .filter(function (e) { return !e.captured.tree.hasChild(tree); });\n    };\n    TreeService.decorators = [\n        { type: core_1.Injectable },\n    ];\n    TreeService.ctorParameters = function () { return [\n        { type: node_draggable_service_1.NodeDraggableService, decorators: [{ type: core_1.Inject, args: [node_draggable_service_1.NodeDraggableService,] },] },\n    ]; };\n    return TreeService;\n}());\nexports.TreeService = TreeService;\n//# sourceMappingURL=tree.service.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ng2-tree/src/tree.service.js\n// module id = 618\n// module chunks = 4","import {Component} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'components',\r\n  template: `<router-outlet></router-outlet>`\r\n})\r\nexport class Components {\r\n\r\n  constructor() {\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/components/components.component.ts","import {Component} from '@angular/core';\r\nimport {TreeModel} from 'ng2-tree';\r\n\r\n@Component({\r\n  selector: 'tree-view',\r\n  template: require('./treeView.html'),\r\n})\r\n\r\nexport class TreeView {\r\n\r\n  tree: TreeModel = {\r\n    value: 'Programming languages by programming paradigm',\r\n    children: [\r\n      {\r\n        value: 'Object-oriented programming',\r\n        children: [\r\n          {value: 'Java'},\r\n          {value: 'C++'},\r\n          {value: 'C#'},\r\n        ]\r\n      },\r\n      {\r\n        value: 'Prototype-based programming',\r\n        children: [\r\n          {value: 'JavaScript'},\r\n          {value: 'CoffeeScript'},\r\n          {value: 'Lua'},\r\n        ]\r\n      }\r\n    ]\r\n  };\r\n\r\n  constructor() {\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/components/components/treeView/treeView.component.ts","\"use strict\";\n(function (NodeEditableEventAction) {\n    NodeEditableEventAction[NodeEditableEventAction[\"Cancel\"] = 0] = \"Cancel\";\n})(exports.NodeEditableEventAction || (exports.NodeEditableEventAction = {}));\nvar NodeEditableEventAction = exports.NodeEditableEventAction;\n//# sourceMappingURL=editable.events.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ng2-tree/src/editable/editable.events.js\n// module id = 693\n// module chunks = 4","\"use strict\";\nvar core_1 = require('@angular/core');\nvar tree_service_1 = require('./tree.service');\nvar tree_1 = require('./tree');\nvar TreeComponent = (function () {\n    function TreeComponent(treeService) {\n        this.treeService = treeService;\n        this.nodeCreated = new core_1.EventEmitter();\n        this.nodeRemoved = new core_1.EventEmitter();\n        this.nodeRenamed = new core_1.EventEmitter();\n        this.nodeSelected = new core_1.EventEmitter();\n        this.nodeMoved = new core_1.EventEmitter();\n    }\n    TreeComponent.prototype.ngOnChanges = function (changes) {\n        if (!this.treeModel) {\n            this.tree = TreeComponent.EMPTY_TREE;\n        }\n        else {\n            this.tree = tree_1.Tree.buildTreeFromModel(this.treeModel);\n        }\n    };\n    TreeComponent.prototype.ngOnInit = function () {\n        var _this = this;\n        this.treeService.nodeRemoved$.subscribe(function (e) {\n            _this.nodeRemoved.emit(e);\n        });\n        this.treeService.nodeRenamed$.subscribe(function (e) {\n            _this.nodeRenamed.emit(e);\n        });\n        this.treeService.nodeCreated$.subscribe(function (e) {\n            _this.nodeCreated.emit(e);\n        });\n        this.treeService.nodeSelected$.subscribe(function (e) {\n            _this.nodeSelected.emit(e);\n        });\n        this.treeService.nodeMoved$.subscribe(function (e) {\n            _this.nodeMoved.emit(e);\n        });\n    };\n    TreeComponent.EMPTY_TREE = new tree_1.Tree({ value: '' });\n    TreeComponent.decorators = [\n        { type: core_1.Component, args: [{\n                    selector: 'tree',\n                    template: \"<tree-internal [tree]=\\\"tree\\\" [settings]=\\\"settings\\\"></tree-internal>\",\n                    providers: [tree_service_1.TreeService]\n                },] },\n    ];\n    TreeComponent.ctorParameters = function () { return [\n        { type: tree_service_1.TreeService, decorators: [{ type: core_1.Inject, args: [tree_service_1.TreeService,] },] },\n    ]; };\n    TreeComponent.propDecorators = {\n        'treeModel': [{ type: core_1.Input, args: ['tree',] },],\n        'settings': [{ type: core_1.Input },],\n        'nodeCreated': [{ type: core_1.Output },],\n        'nodeRemoved': [{ type: core_1.Output },],\n        'nodeRenamed': [{ type: core_1.Output },],\n        'nodeSelected': [{ type: core_1.Output },],\n        'nodeMoved': [{ type: core_1.Output },],\n    };\n    return TreeComponent;\n}());\nexports.TreeComponent = TreeComponent;\n//# sourceMappingURL=tree.component.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ng2-tree/src/tree.component.js\n// module id = 694\n// module chunks = 4","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar NodeEvent = (function () {\n    function NodeEvent(node) {\n        this.node = node;\n    }\n    return NodeEvent;\n}());\nexports.NodeEvent = NodeEvent;\nvar NodeSelectedEvent = (function (_super) {\n    __extends(NodeSelectedEvent, _super);\n    function NodeSelectedEvent(node) {\n        _super.call(this, node);\n    }\n    return NodeSelectedEvent;\n}(NodeEvent));\nexports.NodeSelectedEvent = NodeSelectedEvent;\nvar NodeDestructiveEvent = (function (_super) {\n    __extends(NodeDestructiveEvent, _super);\n    function NodeDestructiveEvent(node) {\n        _super.call(this, node);\n    }\n    return NodeDestructiveEvent;\n}(NodeEvent));\nexports.NodeDestructiveEvent = NodeDestructiveEvent;\nvar NodeMovedEvent = (function (_super) {\n    __extends(NodeMovedEvent, _super);\n    function NodeMovedEvent(node, previousParent) {\n        _super.call(this, node);\n        this.previousParent = previousParent;\n    }\n    return NodeMovedEvent;\n}(NodeDestructiveEvent));\nexports.NodeMovedEvent = NodeMovedEvent;\nvar NodeRemovedEvent = (function (_super) {\n    __extends(NodeRemovedEvent, _super);\n    function NodeRemovedEvent(node) {\n        _super.call(this, node);\n    }\n    return NodeRemovedEvent;\n}(NodeDestructiveEvent));\nexports.NodeRemovedEvent = NodeRemovedEvent;\nvar NodeCreatedEvent = (function (_super) {\n    __extends(NodeCreatedEvent, _super);\n    function NodeCreatedEvent(node) {\n        _super.call(this, node);\n    }\n    return NodeCreatedEvent;\n}(NodeDestructiveEvent));\nexports.NodeCreatedEvent = NodeCreatedEvent;\nvar NodeRenamedEvent = (function (_super) {\n    __extends(NodeRenamedEvent, _super);\n    function NodeRenamedEvent(node, oldValue, newValue) {\n        _super.call(this, node);\n        this.oldValue = oldValue;\n        this.newValue = newValue;\n    }\n    return NodeRenamedEvent;\n}(NodeDestructiveEvent));\nexports.NodeRenamedEvent = NodeRenamedEvent;\n//# sourceMappingURL=tree.events.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ng2-tree/src/tree.events.js\n// module id = 695\n// module chunks = 4","\"use strict\";\nvar _ = require('lodash');\nvar FoldingType = (function () {\n    function FoldingType(_cssClass) {\n        this._cssClass = _cssClass;\n    }\n    Object.defineProperty(FoldingType.prototype, \"cssClass\", {\n        get: function () {\n            return this._cssClass;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    FoldingType.Expanded = new FoldingType('node-expanded');\n    FoldingType.Collapsed = new FoldingType('node-collapsed');\n    FoldingType.Leaf = new FoldingType('node-leaf');\n    return FoldingType;\n}());\nexports.FoldingType = FoldingType;\nvar TreeModelSettings = (function () {\n    function TreeModelSettings() {\n    }\n    TreeModelSettings.merge = function (sourceA, sourceB) {\n        return _.defaults({}, _.get(sourceA, 'settings'), _.get(sourceB, 'settings'), { static: false });\n    };\n    return TreeModelSettings;\n}());\nexports.TreeModelSettings = TreeModelSettings;\n(function (TreeStatus) {\n    TreeStatus[TreeStatus[\"New\"] = 0] = \"New\";\n    TreeStatus[TreeStatus[\"Modified\"] = 1] = \"Modified\";\n    TreeStatus[TreeStatus[\"IsBeingRenamed\"] = 2] = \"IsBeingRenamed\";\n})(exports.TreeStatus || (exports.TreeStatus = {}));\nvar TreeStatus = exports.TreeStatus;\n//# sourceMappingURL=tree.types.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ng2-tree/src/tree.types.js\n// module id = 696\n// module chunks = 4","\"use strict\";\nfunction isLeftButtonClicked(e) {\n    return e.button === MouseButtons.Left;\n}\nexports.isLeftButtonClicked = isLeftButtonClicked;\nfunction isRightButtonClicked(e) {\n    return e.button === MouseButtons.Right;\n}\nexports.isRightButtonClicked = isRightButtonClicked;\nfunction isEscapePressed(e) {\n    return e.keyCode === Keys.Escape;\n}\nexports.isEscapePressed = isEscapePressed;\n(function (Keys) {\n    Keys[Keys[\"Escape\"] = 27] = \"Escape\";\n})(exports.Keys || (exports.Keys = {}));\nvar Keys = exports.Keys;\n(function (MouseButtons) {\n    MouseButtons[MouseButtons[\"Left\"] = 0] = \"Left\";\n    MouseButtons[MouseButtons[\"Right\"] = 2] = \"Right\";\n})(exports.MouseButtons || (exports.MouseButtons = {}));\nvar MouseButtons = exports.MouseButtons;\n//# sourceMappingURL=event.utils.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ng2-tree/src/utils/event.utils.js\n// module id = 697\n// module chunks = 4","import { Routes, RouterModule }  from '@angular/router';\r\n\r\nimport { Components } from './components.component';\r\nimport { TreeView } from './components/treeView/treeView.component';\r\n\r\n// noinspection TypeScriptValidateTypes\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: Components,\r\n    children: [\r\n      { path: 'treeview', component: TreeView }\r\n    ]\r\n  }\r\n];\r\n\r\nexport const routing = RouterModule.forChild(routes);\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/components/components.routing.ts","\"use strict\";\nvar tree_types_1 = require('./src/tree.types');\nexports.TreeModelSettings = tree_types_1.TreeModelSettings;\nexports.FoldingType = tree_types_1.FoldingType;\nvar tree_1 = require('./src/tree');\nexports.Tree = tree_1.Tree;\nvar tree_events_1 = require('./src/tree.events');\nexports.NodeEvent = tree_events_1.NodeEvent;\nexports.NodeCreatedEvent = tree_events_1.NodeCreatedEvent;\nexports.NodeRemovedEvent = tree_events_1.NodeRemovedEvent;\nexports.NodeRenamedEvent = tree_events_1.NodeRenamedEvent;\nexports.NodeMovedEvent = tree_events_1.NodeMovedEvent;\nexports.NodeSelectedEvent = tree_events_1.NodeSelectedEvent;\nexports.NodeDestructiveEvent = tree_events_1.NodeDestructiveEvent;\nvar tree_component_1 = require('./src/tree.component');\nexports.TreeComponent = tree_component_1.TreeComponent;\nvar tree_module_1 = require('./src/tree.module');\nexports.TreeModule = tree_module_1.TreeModule;\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ng2-tree/index.js\n// module id = 841\n// module chunks = 4","\"use strict\";\nvar CapturedNode = (function () {\n    function CapturedNode(anElement, aTree) {\n        this.anElement = anElement;\n        this.aTree = aTree;\n    }\n    CapturedNode.prototype.canBeDroppedAt = function (element) {\n        return !this.sameAs(element) && !this.contains(element);\n    };\n    CapturedNode.prototype.contains = function (other) {\n        return this.element.nativeElement.contains(other.nativeElement);\n    };\n    CapturedNode.prototype.sameAs = function (other) {\n        return this.element === other;\n    };\n    Object.defineProperty(CapturedNode.prototype, \"element\", {\n        get: function () {\n            return this.anElement;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CapturedNode.prototype, \"tree\", {\n        get: function () {\n            return this.aTree;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return CapturedNode;\n}());\nexports.CapturedNode = CapturedNode;\n//# sourceMappingURL=captured-node.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ng2-tree/src/draggable/captured-node.js\n// module id = 842\n// module chunks = 4","\"use strict\";\nvar NodeDraggableEvent = (function () {\n    function NodeDraggableEvent(captured, target) {\n        this.captured = captured;\n        this.target = target;\n    }\n    return NodeDraggableEvent;\n}());\nexports.NodeDraggableEvent = NodeDraggableEvent;\n//# sourceMappingURL=draggable.events.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ng2-tree/src/draggable/draggable.events.js\n// module id = 843\n// module chunks = 4","\"use strict\";\nvar core_1 = require('@angular/core');\nvar node_draggable_service_1 = require('./node-draggable.service');\nvar captured_node_1 = require('./captured-node');\nvar NodeDraggableDirective = (function () {\n    function NodeDraggableDirective(element, nodeDraggableService, renderer) {\n        this.element = element;\n        this.nodeDraggableService = nodeDraggableService;\n        this.renderer = renderer;\n        this.disposersForDragListeners = [];\n        this.nodeNativeElement = element.nativeElement;\n    }\n    NodeDraggableDirective.prototype.ngOnInit = function () {\n        if (!this.tree.isStatic()) {\n            this.renderer.setElementAttribute(this.nodeNativeElement, 'draggable', 'true');\n            this.disposersForDragListeners.push(this.renderer.listen(this.nodeNativeElement, 'dragenter', this.handleDragEnter.bind(this)));\n            this.disposersForDragListeners.push(this.renderer.listen(this.nodeNativeElement, 'dragover', this.handleDragOver.bind(this)));\n            this.disposersForDragListeners.push(this.renderer.listen(this.nodeNativeElement, 'dragstart', this.handleDragStart.bind(this)));\n            this.disposersForDragListeners.push(this.renderer.listen(this.nodeNativeElement, 'dragleave', this.handleDragLeave.bind(this)));\n            this.disposersForDragListeners.push(this.renderer.listen(this.nodeNativeElement, 'drop', this.handleDrop.bind(this)));\n            this.disposersForDragListeners.push(this.renderer.listen(this.nodeNativeElement, 'dragend', this.handleDragEnd.bind(this)));\n        }\n    };\n    NodeDraggableDirective.prototype.ngOnDestroy = function () {\n        this.disposersForDragListeners.forEach(function (dispose) { return dispose(); });\n    };\n    NodeDraggableDirective.prototype.handleDragStart = function (e) {\n        e.stopPropagation();\n        this.nodeDraggableService.captureNode(new captured_node_1.CapturedNode(this.nodeDraggable, this.tree));\n        e.dataTransfer.setData('text', NodeDraggableDirective.DATA_TRANSFER_STUB_DATA);\n        e.dataTransfer.effectAllowed = 'move';\n    };\n    NodeDraggableDirective.prototype.handleDragOver = function (e) {\n        e.preventDefault();\n        e.dataTransfer.dropEffect = 'move';\n    };\n    NodeDraggableDirective.prototype.handleDragEnter = function (e) {\n        e.preventDefault();\n        if (this.containsElementAt(e)) {\n            this.addClass('over-drop-target');\n        }\n    };\n    NodeDraggableDirective.prototype.handleDragLeave = function (e) {\n        if (!this.containsElementAt(e)) {\n            this.removeClass('over-drop-target');\n        }\n    };\n    NodeDraggableDirective.prototype.handleDrop = function (e) {\n        e.preventDefault();\n        e.stopPropagation();\n        this.removeClass('over-drop-target');\n        if (!this.isDropPossible(e)) {\n            return false;\n        }\n        if (this.nodeDraggableService.getCapturedNode()) {\n            return this.notifyThatNodeWasDropped();\n        }\n    };\n    NodeDraggableDirective.prototype.isDropPossible = function (e) {\n        var capturedNode = this.nodeDraggableService.getCapturedNode();\n        return capturedNode\n            && capturedNode.canBeDroppedAt(this.nodeDraggable)\n            && this.containsElementAt(e);\n    };\n    NodeDraggableDirective.prototype.handleDragEnd = function (e) {\n        this.removeClass('over-drop-target');\n        this.nodeDraggableService.releaseCapturedNode();\n    };\n    NodeDraggableDirective.prototype.containsElementAt = function (e) {\n        var _a = e.x, x = _a === void 0 ? e.clientX : _a, _b = e.y, y = _b === void 0 ? e.clientY : _b;\n        return this.nodeNativeElement.contains(document.elementFromPoint(x, y));\n    };\n    NodeDraggableDirective.prototype.addClass = function (className) {\n        var classList = this.nodeNativeElement.classList;\n        classList.add(className);\n    };\n    NodeDraggableDirective.prototype.removeClass = function (className) {\n        var classList = this.nodeNativeElement.classList;\n        classList.remove(className);\n    };\n    NodeDraggableDirective.prototype.notifyThatNodeWasDropped = function () {\n        this.nodeDraggableService.fireNodeDragged(this.nodeDraggableService.getCapturedNode(), this.nodeDraggable);\n    };\n    NodeDraggableDirective.DATA_TRANSFER_STUB_DATA = 'some browsers enable drag-n-drop only when dataTransfer has data';\n    NodeDraggableDirective.decorators = [\n        { type: core_1.Directive, args: [{\n                    selector: '[nodeDraggable]'\n                },] },\n    ];\n    NodeDraggableDirective.ctorParameters = function () { return [\n        { type: core_1.ElementRef, decorators: [{ type: core_1.Inject, args: [core_1.ElementRef,] },] },\n        { type: node_draggable_service_1.NodeDraggableService, decorators: [{ type: core_1.Inject, args: [node_draggable_service_1.NodeDraggableService,] },] },\n        { type: core_1.Renderer, decorators: [{ type: core_1.Inject, args: [core_1.Renderer,] },] },\n    ]; };\n    NodeDraggableDirective.propDecorators = {\n        'nodeDraggable': [{ type: core_1.Input },],\n        'tree': [{ type: core_1.Input },],\n    };\n    return NodeDraggableDirective;\n}());\nexports.NodeDraggableDirective = NodeDraggableDirective;\n//# sourceMappingURL=node-draggable.directive.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ng2-tree/src/draggable/node-draggable.directive.js\n// module id = 844\n// module chunks = 4","\"use strict\";\nvar core_1 = require('@angular/core');\nvar editable_events_1 = require('./editable.events');\nvar NodeEditableDirective = (function () {\n    function NodeEditableDirective(renderer, elementRef) {\n        this.renderer = renderer;\n        this.elementRef = elementRef;\n        this.valueChanged = new core_1.EventEmitter(false);\n    }\n    NodeEditableDirective.prototype.ngOnInit = function () {\n        var nativeElement = this.elementRef.nativeElement;\n        this.renderer.invokeElementMethod(nativeElement, 'focus', []);\n        this.renderer.setElementProperty(nativeElement, 'value', this.nodeValue);\n    };\n    NodeEditableDirective.prototype.applyNewValue = function (newNodeValue) {\n        this.valueChanged.emit({ type: 'keyup', value: newNodeValue });\n    };\n    NodeEditableDirective.prototype.applyNewValueByLoosingFocus = function (newNodeValue) {\n        this.valueChanged.emit({ type: 'blur', value: newNodeValue });\n    };\n    NodeEditableDirective.prototype.cancelEditing = function () {\n        this.valueChanged.emit({\n            type: 'keyup',\n            value: this.nodeValue,\n            action: editable_events_1.NodeEditableEventAction.Cancel\n        });\n    };\n    NodeEditableDirective.decorators = [\n        { type: core_1.Directive, args: [{\n                    selector: '[nodeEditable]'\n                },] },\n    ];\n    NodeEditableDirective.ctorParameters = function () { return [\n        { type: core_1.Renderer, decorators: [{ type: core_1.Inject, args: [core_1.Renderer,] },] },\n        { type: core_1.ElementRef, decorators: [{ type: core_1.Inject, args: [core_1.ElementRef,] },] },\n    ]; };\n    NodeEditableDirective.propDecorators = {\n        'nodeValue': [{ type: core_1.Input, args: ['nodeEditable',] },],\n        'valueChanged': [{ type: core_1.Output },],\n        'applyNewValue': [{ type: core_1.HostListener, args: ['keyup.enter', ['$event.target.value'],] },],\n        'applyNewValueByLoosingFocus': [{ type: core_1.HostListener, args: ['blur', ['$event.target.value'],] },],\n        'cancelEditing': [{ type: core_1.HostListener, args: ['keyup.esc',] },],\n    };\n    return NodeEditableDirective;\n}());\nexports.NodeEditableDirective = NodeEditableDirective;\n//# sourceMappingURL=node-editable.directive.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ng2-tree/src/editable/node-editable.directive.js\n// module id = 845\n// module chunks = 4","\"use strict\";\nvar core_1 = require('@angular/core');\nvar node_menu_service_1 = require('./node-menu.service');\nvar menu_events_1 = require('./menu.events');\nvar event_utils_1 = require('../utils/event.utils');\nvar NodeMenuComponent = (function () {\n    function NodeMenuComponent(renderer, nodeMenuService) {\n        this.renderer = renderer;\n        this.nodeMenuService = nodeMenuService;\n        this.menuItemSelected = new core_1.EventEmitter();\n        this.availableMenuItems = [\n            {\n                name: 'New tag',\n                action: menu_events_1.NodeMenuItemAction.NewTag,\n                cssClass: 'new-tag'\n            },\n            {\n                name: 'New folder',\n                action: menu_events_1.NodeMenuItemAction.NewFolder,\n                cssClass: 'new-folder'\n            },\n            {\n                name: 'Rename',\n                action: menu_events_1.NodeMenuItemAction.Rename,\n                cssClass: 'rename'\n            },\n            {\n                name: 'Remove',\n                action: menu_events_1.NodeMenuItemAction.Remove,\n                cssClass: 'remove'\n            }\n        ];\n        this.disposersForGlobalListeners = [];\n    }\n    NodeMenuComponent.prototype.ngOnInit = function () {\n        this.disposersForGlobalListeners.push(this.renderer.listenGlobal('document', 'keyup', this.closeMenu.bind(this)));\n        this.disposersForGlobalListeners.push(this.renderer.listenGlobal('document', 'click', this.closeMenu.bind(this)));\n    };\n    NodeMenuComponent.prototype.ngOnDestroy = function () {\n        this.disposersForGlobalListeners.forEach(function (dispose) { return dispose(); });\n    };\n    NodeMenuComponent.prototype.onMenuItemSelected = function (e, selectedMenuItem) {\n        if (event_utils_1.isLeftButtonClicked(e)) {\n            this.menuItemSelected.emit({ nodeMenuItemAction: selectedMenuItem.action });\n        }\n    };\n    NodeMenuComponent.prototype.closeMenu = function (e) {\n        var mouseClicked = e instanceof MouseEvent;\n        if (mouseClicked || event_utils_1.isEscapePressed(e)) {\n            this.nodeMenuService.fireMenuEvent(e.target, menu_events_1.NodeMenuAction.Close);\n        }\n    };\n    NodeMenuComponent.decorators = [\n        { type: core_1.Component, args: [{\n                    selector: 'node-menu',\n                    template: \"\\n    <div class=\\\"node-menu\\\">\\n      <ul class=\\\"node-menu-content\\\">\\n        <li class=\\\"node-menu-item\\\" *ngFor=\\\"let menuItem of availableMenuItems\\\"\\n            (click)=\\\"onMenuItemSelected($event, menuItem)\\\">\\n          <div class=\\\"node-menu-item-icon {{menuItem.cssClass}}\\\"></div>\\n          <span class=\\\"node-menu-item-value\\\">{{menuItem.name}}</span>\\n        </li>\\n      </ul>\\n    </div>\\n  \"\n                },] },\n    ];\n    NodeMenuComponent.ctorParameters = function () { return [\n        { type: core_1.Renderer, decorators: [{ type: core_1.Inject, args: [core_1.Renderer,] },] },\n        { type: node_menu_service_1.NodeMenuService, decorators: [{ type: core_1.Inject, args: [node_menu_service_1.NodeMenuService,] },] },\n    ]; };\n    NodeMenuComponent.propDecorators = {\n        'menuItemSelected': [{ type: core_1.Output },],\n    };\n    return NodeMenuComponent;\n}());\nexports.NodeMenuComponent = NodeMenuComponent;\n//# sourceMappingURL=node-menu.component.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ng2-tree/src/menu/node-menu.component.js\n// module id = 846\n// module chunks = 4","\"use strict\";\nvar core_1 = require('@angular/core');\nvar tree_1 = require('./tree');\nvar node_menu_service_1 = require('./menu/node-menu.service');\nvar menu_events_1 = require('./menu/menu.events');\nvar editable_events_1 = require('./editable/editable.events');\nvar tree_service_1 = require('./tree.service');\nvar EventUtils = require('./utils/event.utils');\nvar TreeInternalComponent = (function () {\n    function TreeInternalComponent(nodeMenuService, treeService, element) {\n        this.nodeMenuService = nodeMenuService;\n        this.treeService = treeService;\n        this.element = element;\n        this.isSelected = false;\n        this.isMenuVisible = false;\n    }\n    TreeInternalComponent.prototype.ngOnInit = function () {\n        var _this = this;\n        this.settings = this.settings || { rootIsVisible: true };\n        this.nodeMenuService.hideMenuStream(this.element)\n            .subscribe(function () { return _this.isMenuVisible = false; });\n        this.treeService.unselectStream(this.tree)\n            .subscribe(function () { return _this.isSelected = false; });\n        this.treeService.draggedStream(this.tree, this.element)\n            .subscribe(function (e) {\n            if (_this.tree.hasSibling(e.captured.tree)) {\n                _this.swapWithSibling(e.captured.tree, _this.tree);\n            }\n            else if (_this.tree.isBranch()) {\n                _this.moveNodeToThisTreeAndRemoveFromPreviousOne(e, _this.tree);\n            }\n            else {\n                _this.moveNodeToParentTreeAndRemoveFromPreviousOne(e, _this.tree);\n            }\n        });\n    };\n    TreeInternalComponent.prototype.swapWithSibling = function (sibling, tree) {\n        tree.swapWithSibling(sibling);\n        this.treeService.fireNodeMoved(sibling, sibling.parent);\n    };\n    TreeInternalComponent.prototype.moveNodeToThisTreeAndRemoveFromPreviousOne = function (e, tree) {\n        this.treeService.fireNodeRemoved(e.captured.tree);\n        var addedChild = tree.addChild(e.captured.tree);\n        this.treeService.fireNodeMoved(addedChild, e.captured.tree.parent);\n    };\n    TreeInternalComponent.prototype.moveNodeToParentTreeAndRemoveFromPreviousOne = function (e, tree) {\n        this.treeService.fireNodeRemoved(e.captured.tree);\n        var addedSibling = tree.addSibling(e.captured.tree, tree.positionInParent);\n        this.treeService.fireNodeMoved(addedSibling, e.captured.tree.parent);\n    };\n    TreeInternalComponent.prototype.onNodeSelected = function (e) {\n        if (EventUtils.isLeftButtonClicked(e)) {\n            this.isSelected = true;\n            this.treeService.fireNodeSelected(this.tree);\n        }\n    };\n    TreeInternalComponent.prototype.showMenu = function (e) {\n        if (this.tree.isStatic()) {\n            return;\n        }\n        if (EventUtils.isRightButtonClicked(e)) {\n            this.isMenuVisible = !this.isMenuVisible;\n            this.nodeMenuService.hideMenuForAllNodesExcept(this.element);\n        }\n        e.preventDefault();\n    };\n    TreeInternalComponent.prototype.onMenuItemSelected = function (e) {\n        switch (e.nodeMenuItemAction) {\n            case menu_events_1.NodeMenuItemAction.NewTag:\n                this.onNewSelected(e);\n                break;\n            case menu_events_1.NodeMenuItemAction.NewFolder:\n                this.onNewSelected(e);\n                break;\n            case menu_events_1.NodeMenuItemAction.Rename:\n                this.onRenameSelected();\n                break;\n            case menu_events_1.NodeMenuItemAction.Remove:\n                this.onRemoveSelected();\n                break;\n            default:\n                throw new Error(\"Chosen menu item doesn't exist\");\n        }\n    };\n    TreeInternalComponent.prototype.onNewSelected = function (e) {\n        this.tree.createNode(e.nodeMenuItemAction === menu_events_1.NodeMenuItemAction.NewFolder);\n        this.isMenuVisible = false;\n    };\n    TreeInternalComponent.prototype.onRenameSelected = function () {\n        this.tree.markAsBeingRenamed();\n        this.isMenuVisible = false;\n    };\n    TreeInternalComponent.prototype.onRemoveSelected = function () {\n        this.treeService.fireNodeRemoved(this.tree);\n    };\n    TreeInternalComponent.prototype.applyNewValue = function (e) {\n        if ((e.action === editable_events_1.NodeEditableEventAction.Cancel || this.tree.isNew()) && tree_1.Tree.isValueEmpty(e.value)) {\n            return this.treeService.fireNodeRemoved(this.tree);\n        }\n        if (this.tree.isNew()) {\n            this.tree.value = e.value;\n            this.treeService.fireNodeCreated(this.tree);\n        }\n        if (this.tree.isBeingRenamed()) {\n            var oldValue = this.tree.value;\n            this.tree.value = e.value;\n            this.treeService.fireNodeRenamed(oldValue, this.tree);\n        }\n        this.tree.markAsModified();\n    };\n    TreeInternalComponent.prototype.shouldShowInputForTreeValue = function () {\n        return this.tree.isNew() || this.tree.isBeingRenamed();\n    };\n    TreeInternalComponent.prototype.isRootHidden = function () {\n        return this.tree.isRoot() && !this.settings.rootIsVisible;\n    };\n    TreeInternalComponent.decorators = [\n        { type: core_1.Component, args: [{\n                    selector: 'tree-internal',\n                    template: \"\\n  <ul class=\\\"tree\\\" *ngIf=\\\"tree\\\" [ngClass]=\\\"{rootless: isRootHidden()}\\\">\\n    <li>\\n      <div class=\\\"value-container\\\"\\n        [ngClass]=\\\"{rootless: isRootHidden()}\\\" \\n        (contextmenu)=\\\"showMenu($event)\\\" \\n        [nodeDraggable]=\\\"element\\\"\\n        [tree]=\\\"tree\\\">\\n\\n        <div class=\\\"folding\\\" (click)=\\\"tree.switchFoldingType()\\\" [ngClass]=\\\"tree.foldingType.cssClass\\\"></div>\\n        <div class=\\\"node-value\\\" \\n          *ngIf=\\\"!shouldShowInputForTreeValue()\\\" \\n          [class.node-selected]=\\\"isSelected\\\" \\n          (click)=\\\"onNodeSelected($event)\\\">{{tree.value}}</div>\\n\\n        <input type=\\\"text\\\" class=\\\"node-value\\\" \\n           *ngIf=\\\"shouldShowInputForTreeValue()\\\"\\n           [nodeEditable]=\\\"tree.value\\\"\\n           (valueChanged)=\\\"applyNewValue($event)\\\"/>\\n      </div>\\n\\n      <node-menu *ngIf=\\\"isMenuVisible\\\" (menuItemSelected)=\\\"onMenuItemSelected($event)\\\"></node-menu>\\n\\n      <template [ngIf]=\\\"tree.isNodeExpanded()\\\">\\n        <tree-internal *ngFor=\\\"let child of tree.children\\\" [tree]=\\\"child\\\"></tree-internal>\\n      </template>\\n    </li>\\n  </ul>\\n  \"\n                },] },\n    ];\n    TreeInternalComponent.ctorParameters = function () { return [\n        { type: node_menu_service_1.NodeMenuService, decorators: [{ type: core_1.Inject, args: [node_menu_service_1.NodeMenuService,] },] },\n        { type: tree_service_1.TreeService, decorators: [{ type: core_1.Inject, args: [tree_service_1.TreeService,] },] },\n        { type: core_1.ElementRef, decorators: [{ type: core_1.Inject, args: [core_1.ElementRef,] },] },\n    ]; };\n    TreeInternalComponent.propDecorators = {\n        'tree': [{ type: core_1.Input },],\n        'settings': [{ type: core_1.Input },],\n    };\n    return TreeInternalComponent;\n}());\nexports.TreeInternalComponent = TreeInternalComponent;\n//# sourceMappingURL=tree-internal.component.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ng2-tree/src/tree-internal.component.js\n// module id = 847\n// module chunks = 4","\"use strict\";\nvar core_1 = require('@angular/core');\nvar tree_component_1 = require('./tree.component');\nvar tree_internal_component_1 = require('./tree-internal.component');\nvar common_1 = require('@angular/common');\nvar node_draggable_directive_1 = require('./draggable/node-draggable.directive');\nvar node_draggable_service_1 = require('./draggable/node-draggable.service');\nvar node_editable_directive_1 = require('./editable/node-editable.directive');\nvar node_menu_component_1 = require('./menu/node-menu.component');\nvar node_menu_service_1 = require('./menu/node-menu.service');\nvar tree_service_1 = require('./tree.service');\nvar TreeModule = (function () {\n    function TreeModule() {\n    }\n    TreeModule.decorators = [\n        { type: core_1.NgModule, args: [{\n                    imports: [common_1.CommonModule],\n                    declarations: [node_draggable_directive_1.NodeDraggableDirective, tree_component_1.TreeComponent, node_editable_directive_1.NodeEditableDirective, node_menu_component_1.NodeMenuComponent, tree_internal_component_1.TreeInternalComponent],\n                    exports: [tree_component_1.TreeComponent],\n                    providers: [node_draggable_service_1.NodeDraggableService, node_menu_service_1.NodeMenuService, tree_service_1.TreeService]\n                },] },\n    ];\n    TreeModule.ctorParameters = function () { return []; };\n    return TreeModule;\n}());\nexports.TreeModule = TreeModule;\n//# sourceMappingURL=tree.module.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ng2-tree/src/tree.module.js\n// module id = 848\n// module chunks = 4","module.exports = \"<div class=\\\"col-md-6\\\">\\r\\n  <ba-card title=\\\"basic\\\">\\r\\n    <tree id=\\\"tree-view\\\" [tree]=\\\"tree\\\"></tree>\\r\\n  </ba-card>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/components/components/treeView/treeView.html\n// module id = 863\n// module chunks = 4"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAeA;AAAA;AAAA;AAbA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAAA;AACA;AAAA;;;;;;;;;;;;;;;;;;;ACvBA;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC1LA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC/CA;AAMA;AAEA;AACA;AAPA;AAAA;AACA;AACA;AACA;;AAAA;AAMA;AAAA;;;;;;;;;;;ACXA;AAQA;AAwBA;AAtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AA9BA;AAAA;AACA;AACA;AACA;;AAAA;AA6BA;AAAA;;;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC9DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AChEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACtBA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AChrpEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACtIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC1BA;;;;","sourceRoot":""}